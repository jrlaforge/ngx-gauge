{"version":3,"file":"jla-ngx-gauge.umd.min.js","sources":["~/jla-ngx-gauge/src/common/util.ts","~/jla-ngx-gauge/src/gauge/gauge-directives.ts","~/jla-ngx-gauge/src/gauge/gauge.ts","~/jla-ngx-gauge/src/ngx-gauge.module.ts"],"sourcesContent":["export function clamp(value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(max, value));\n}\nexport function coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\nexport function coerceNumberProperty(value: any, fallbackValue: number = 0): number {\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\nexport function cssUnit(value: number) {\n    return `${value}px`;\n}\nexport function isNumber(value: string) {\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n","import {\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation,\n    Renderer,\n    AfterViewInit,\n    ElementRef,\n    OnChanges,\n    OnDestroy,\n    ViewChild, \n    ContentChild\n} from '@angular/core';\nimport { NgxGaugeError } from './gauge-error';\nimport {\n    clamp,\n    coerceBooleanProperty,\n    coerceNumberProperty,\n    cssUnit,\n    isNumber\n} from '../common/util';\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge-directives';\n\nconst DEFAULTS = {\n    MIN: 0,\n    MAX: 100,\n    TYPE: 'arch',\n    THICK: 4,\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n    CAP: 'butt',\n    SIZE: 200\n};\n\nexport type NgxGaugeType = 'full' | 'arch' | 'semi';\nexport type NgxGaugeCap = 'round' | 'butt';\n\n@Component({\n    selector: 'ngx-gauge',\n    template: `\n      <div class=\"reading-block\" #reading [style.fontSize]=\"size * 0.22 + 'px'\" [style.lineHeight]=\"size + 'px'\">\n        <!-- This block can not be indented correctly, because line breaks cause layout spacing, related problem: https://pt.stackoverflow.com/q/276760/2998 -->\n        <u class=\"reading-affix\" [ngSwitch]=\"_prependChild != null\"><ng-content select=\"ngx-gauge-prepend\" *ngSwitchCase=\"true\"></ng-content><ng-container *ngSwitchCase=\"false\">{{prepend}}</ng-container></u><ng-container [ngSwitch]=\"_valueDisplayChild != null\"><ng-content *ngSwitchCase=\"true\" select=\"ngx-gauge-value\"></ng-content><ng-container *ngSwitchCase=\"false\">{{value | number}}</ng-container></ng-container><u class=\"reading-affix\" [ngSwitch]=\"_appendChild != null\"><ng-content select=\"ngx-gauge-append\" *ngSwitchCase=\"true\"></ng-content><ng-container *ngSwitchCase=\"false\">{{append}}</ng-container></u>\n      </div>\n      <div class=\"reading-label\" \n           [style.fontSize]=\"size / 13 + 'px'\" \n           [style.lineHeight]=\"(5 * size / 13) + size + 'px'\" \n           [ngSwitch]=\"_labelChild != null\">\n        <ng-content select=\"ngx-gauge-label\" *ngSwitchCase=\"true\"></ng-content>\n        <ng-container *ngSwitchCase=\"false\">{{label}}</ng-container>\n      </div>\n      <canvas #canvas [width]=\"size\" [height]=\"size\"></canvas>\n    `,\n    styles: [`\n      .ngx-gauge-meter {\n          display: inline-block;\n          text-align: center;\n          position: relative;\n      }\n\n      .reading-block {\n          position: absolute;\n          width: 100%;\n          font-weight: normal;\n          white-space: nowrap;\n          text-align: center;\n          overflow: hidden;\n          text-overflow: ellipsis;\n      }\n\n      .reading-label {\n          font-family: inherit;\n          width: 100%;\n          display: inline-block;\n          position: absolute;\n          text-align: center;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          font-weight: normal;\n      }\n\n      .reading-affix {\n          text-decoration: none;\n          font-size: 0.6em;\n          opacity: 0.8;\n          font-weight: 200;\n          padding: 0 0.18em;\n      }\n\n      .reading-affix:first-child {\n          padding-left: 0;\n      }\n\n      .reading-affix:last-child {\n          padding-right: 0;\n      }\n    `],\n    host: {\n        'role': 'meter',\n        '[class.ngx-gauge-meter]': 'true',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'value'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxGauge implements AfterViewInit, OnChanges, OnDestroy {\n\n    @ViewChild('canvas') _canvas: ElementRef;\n    \n    @ContentChild(NgxGaugeLabel) _labelChild: NgxGaugeLabel;\n    @ContentChild(NgxGaugePrepend) _prependChild: NgxGaugePrepend;\n    @ContentChild(NgxGaugeAppend) _appendChild: NgxGaugeAppend;\n    @ContentChild(NgxGaugeValue) _valueDisplayChild: NgxGaugeValue;\n\n    private _size: number = DEFAULTS.SIZE;\n    private _min: number = DEFAULTS.MIN;\n    private _max: number = DEFAULTS.MAX;\n\n    private _initialized: boolean = false;\n    private _context: CanvasRenderingContext2D;\n    private _animationRequestID: number = 0;\n\n    @Input()\n    get size(): number { return this._size; }\n    set size(value: number) {\n        this._size = coerceNumberProperty(value);\n    }\n\n    @Input()\n    get min(): number { return this._min; }\n    set min(value: number) {\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\n    }\n\n    @Input() max: number = DEFAULTS.MAX;\n\n    @Input() type: NgxGaugeType = DEFAULTS.TYPE as NgxGaugeType;\n\n    @Input() cap: NgxGaugeCap = DEFAULTS.CAP as NgxGaugeCap;\n\n    @Input() thick: number = DEFAULTS.THICK;\n\n    @Input() label: string;\n\n    @Input() append: string;\n\n    @Input() prepend: string;\n\n    @Input() foregroundColor: string = DEFAULTS.FOREGROUND_COLOR;\n\n    @Input() backgroundColor: string = DEFAULTS.BACKGROUND_COLOR;\n\n    @Input() thresholds: Object = Object.create(null);\n\n    private _value: number = 0;\n\n    @Input()\n    get value() { return this._value; }\n    set value(val: number) {\n        this._value = coerceNumberProperty(val);\n    }\n\n    @Input() duration: number = 1200;\n\n    constructor(private _elementRef: ElementRef, private _renderer: Renderer) { }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const isTextChanged = changes['label'] || changes['append'] || changes['prepend'];\n        const isDataChanged = changes['value'] || changes['min'] || changes['max'];\n\n        if (this._initialized) {\n            if (isDataChanged) {\n                let nv, ov;\n                if (changes['value']) {\n                    nv = changes['value'].currentValue;\n                    ov = changes['value'].previousValue;\n                }\n                this._update(nv, ov);\n            } else if (!isTextChanged) {\n                this._destroy();\n                this._init();\n            }\n        }\n    }\n\n    private _updateSize() {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', cssUnit(this._size));\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'height', cssUnit(this._size));\n    }\n\n    ngAfterViewInit() {\n        if (this._canvas) {\n            this._init();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy();\n    }\n\n    private _getBounds(type: NgxGaugeType) {\n        let head, tail;\n        if (type == 'semi') {\n            head = Math.PI;\n            tail = 2 * Math.PI;\n        } else if (type == 'full') {\n            head = 1.5 * Math.PI;\n            tail = 3.5 * Math.PI;\n        } else if (type === 'arch') {\n            head = 0.8 * Math.PI;\n            tail = 2.2 * Math.PI;\n        }\n        return { head, tail };\n    }\n\n    private _drawShell(start: number, middle: number, tail: number, color: string) {\n        let center = this._getCenter(),\n            radius = this._getRadius();\n\n        middle = Math.max(middle, start); // never below 0%\n        middle = Math.min(middle, tail); // never exceed 100%\n\n        this._clear();\n        this._context.beginPath();\n        this._context.strokeStyle = this.backgroundColor;\n        this._context.arc(center.x, center.y, radius, middle, tail, false);\n        this._context.stroke();\n\n        this._context.beginPath();\n        this._context.strokeStyle = color;\n        this._context.arc(center.x, center.y, radius, start, middle, false);\n        this._context.stroke();\n\n    }\n\n    private _clear() {\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\n    }\n\n    private _getWidth() {\n        return this.size;\n    }\n\n    private _getHeight() {\n        return this.size;\n    }\n\n    private _getRadius() {\n        var center = this._getCenter();\n        return center.x - this.thick;\n    }\n\n    private _getCenter() {\n        var x = this._getWidth() / 2,\n            y = this._getHeight() / 2;\n        return { x, y };\n    }\n\n    private _init() {\n        this._context = (this._canvas.nativeElement as HTMLCanvasElement).getContext('2d');\n        this._initialized = true;\n        this._updateSize();\n        this._setupStyles();\n        this._create();\n    }\n\n    private _destroy() {\n        if (this._animationRequestID) {\n            window.cancelAnimationFrame(this._animationRequestID);\n            this._animationRequestID = 0;\n        }\n        this._clear();\n        this._context = null;\n    }\n\n    private _setupStyles() {\n        this._context.canvas.width = this.size;\n        this._context.canvas.height = this.size;\n        this._context.lineCap = this.cap;\n        this._context.lineWidth = this.thick;\n    }\n\n    private _getForegroundColorByRange(value) {\n\n        const match = Object.keys(this.thresholds)\n            .filter(function (item) { return isNumber(item) && Number(item) <= value })\n            .sort((a, b) => Number(a) - Number(b))\n            .reverse()[0];\n\n        return match !== undefined\n            ? this.thresholds[match].color || this.foregroundColor\n            : this.foregroundColor;\n    }\n\n    private _create(nv?: number, ov?: number) {\n        let self = this,\n            type = this.type,\n            bounds = this._getBounds(type),\n            duration = this.duration,\n            min = this.min,\n            max = this.max,\n            value = clamp(this.value, this.min, this.max),\n            start = bounds.head,\n            unit = (bounds.tail - bounds.head) / (max - min),\n            displacement = unit * (value - min),\n            tail = bounds.tail,\n            color = this._getForegroundColorByRange(value),\n            startTime;\n\n        if (nv != undefined && ov != undefined) {\n            displacement = unit * nv - unit * ov;\n        }\n        function animate(timestamp) {\n            const requestID = requestAnimationFrame(animate);\n            timestamp = timestamp || new Date().getTime();\n            let runtime = timestamp - startTime;\n            let progress = Math.min(runtime / duration, 1);\n            let previousProgress = ov ? ov * unit : 0;\n            let middle = start + previousProgress + displacement * progress;\n\n            self._drawShell(start, middle, tail, color);\n            if (progress === 1) {\n              cancelAnimationFrame(requestID);\n            }\n\n        }\n\n        requestAnimationFrame((timestamp) => {\n            startTime = timestamp || new Date().getTime();\n            animate(timestamp);\n        });\n    }\n\n    private _update(nv: number, ov: number) {\n        this._clear();\n        this._create(nv, ov);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxGauge } from './gauge/gauge';\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge/gauge-directives';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\n  exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\n})\nexport class NgxGaugeModule { }"],"names":["coerceNumberProperty","value","fallbackValue","isNaN","parseFloat","Number","cssUnit","NgxGaugeAppend","decorators","type","Directive","args","selector","exportAs","ctorParameters","NgxGaugePrepend","NgxGaugeValue","NgxGaugeLabel","DEFAULTS","NgxGauge","_elementRef","_renderer","this","_size","_min","_max","_initialized","_animationRequestID","max","cap","thick","foregroundColor","backgroundColor","thresholds","Object","create","_value","duration","defineProperty","prototype","get","set","val","ngOnChanges","changes","isTextChanged","isDataChanged","nv","ov","currentValue","previousValue","_update","_destroy","_init","_updateSize","setElementStyle","nativeElement","ngAfterViewInit","_canvas","ngOnDestroy","_getBounds","head","tail","Math","PI","_drawShell","start","middle","color","center","_getCenter","radius","_getRadius","min","_clear","_context","beginPath","strokeStyle","arc","x","y","stroke","clearRect","_getWidth","_getHeight","size","getContext","_setupStyles","_create","window","cancelAnimationFrame","canvas","width","height","lineCap","lineWidth","_getForegroundColorByRange","match","keys","filter","item","isNumber","undefined","sort","a","b","reverse","startTime","self","bounds","clamp","unit","displacement","animate","timestamp","requestID","requestAnimationFrame","runtime","Date","getTime","progress","Component","template","styles","host","role","[class.ngx-gauge-meter]","[attr.aria-valuemin]","[attr.aria-valuemax]","[attr.aria-valuenow]","encapsulation","ViewEncapsulation","None","ElementRef","Renderer","propDecorators","ViewChild","_labelChild","ContentChild","_prependChild","_appendChild","_valueDisplayChild","Input","label","append","prepend","NgxGaugeModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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"}
